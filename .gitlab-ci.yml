stages:
  - build
  - test
  - deploy

# Строим проект
build_job:
  stage: build
  image: openjdk:11  # Используем контейнер с Java для сборки Android
  before_script:
    - apt-get update -y
    - apt-get install -y wget unzip
    - wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - unzip commandlinetools-linux-7583922_latest.zip -d /cmdline-tools
    - yes | /cmdline-tools/bin/sdkmanager --sdk_root=/sdk "platforms;android-30" "build-tools;30.0.3"
    - export ANDROID_HOME=/sdk
    - export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools
  script:
    - ./gradlew assembleRelease  # или assembleDebug, в зависимости от твоей конфигурации
  artifacts:
    paths:
      - app/build/outputs/apk/  # Путь к apk файлам после сборки

# Тестируем проект
test_job:
  stage: test
  image: openjdk:11
  before_script:
    - apt-get update -y
    - apt-get install -y wget unzip
    - wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - unzip commandlinetools-linux-7583922_latest.zip -d /cmdline-tools
    - yes | /cmdline-tools/bin/sdkmanager --sdk_root=/sdk "platforms;android-30" "build-tools;30.0.3"
    - export ANDROID_HOME=/sdk
    - export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools
  script:
    - ./gradlew test  # Здесь запускаются unit-тесты, если они есть

# Деплой проекта
deploy_job:
  stage: deploy
  script:
    - echo "Deploying APK..."
    - # Здесь твоя команда деплоя, например, на Google Play или на сервер
  only:
    - main  # Этот шаг выполняется только на ветке main
