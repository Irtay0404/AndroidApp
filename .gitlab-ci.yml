stages:
  - build
  - test
  - deploy

variables:
  ANDROID_SDK_ROOT: "$HOME/android-sdk"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  
# Установка Android SDK, если его нет
before_script:
  - if [ ! -d "$ANDROID_SDK_ROOT" ]; then
      mkdir -p "$ANDROID_SDK_ROOT";
      wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip || { echo "Failed to download Android SDK"; exit 1; };
      unzip commandlinetools.zip -d "$ANDROID_SDK_ROOT" || { echo "Failed to unzip Android SDK"; exit 1; };
      yes | $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platforms;android-35" "build-tools;35.0.0" "platform-tools" || { echo "Failed to install SDK packages"; exit 1; };
    fi
  - export PATH="$ANDROID_SDK_ROOT/cmdline-tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
  - chmod +x gradlew

# Кэширование для ускорения сборки
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .gradle/

# Шаг сборки
build:
  stage: build
  script:
    - echo "Running Gradle clean and assembleDebug"
    - ./gradlew clean assembleDebug || { echo "Gradle build failed"; exit 1; }
  
# Шаг тестирования
test:
  stage: test
  script:
    - echo "Running Gradle testDebug"
    - ./gradlew testDebug || { echo "Gradle test failed"; exit 1; }

# Шаг деплоя
deploy:
  stage: deploy
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
    # Здесь можно добавить свою логику деплоя, например, с использованием Firebase App Distribution
